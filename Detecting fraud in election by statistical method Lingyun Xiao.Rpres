Detecting fraud in election by data analysis
========================================================
Lingyun "Richard" Xiao

Princeton International School of Mathematics and Science

Mentors: Dr. Sergey Samsonau, Dr. Andi Shehu

Jan 22, 2015

Outline
========================================================
- About Data Science & R Programming
- Introduction 
- What is already done?
- What is still unclear?
- Current Stage
- Future Goals & Possible Directions
- References

About Data Science & R Programming
========================================================
**Data Science**

- Dealing with vast amounts of heterogeneous data

- Interdisciplinary applications

**R Programming**

- Programming language for computing and graphics

- Easy for users to modify the packages

Introduction
========================================================
- 2014 Turkish mayoral election
- AKP vote share vs. Turnout rates

![alt text](Election Vote Graph.png)

What is already done?
========================================================
- Twitter: Erik Meyersson
- Further analysis of the invalid ballot
 ![alt text](pic1_istanbul.png)

What is already done?
======================================================== 
- Regression coefficient
 ![alt text](ind_istanbul.png)

What am I going to do?
========================================================
- Is there a fraud?

- Qualitative Analysis -> Quantitative Analysis
  - Calculation of the respective rate of fraud?

- R Programming
  - Reproduction of the graphs
  - Development of new graphs
  
- Application
  - Using the algorithm in other elections?

Current Stage
========================================================
- Obtain the data 

- Understand the data

- Clean the data

- Program the algorithm

- Make plots

Current Stage
========================================================
```{r, fig.width=9, fig.height=9, echo=FALSE}
#Read and summarize the data 
ankara <- read.csv("ankara.csv")
#head(ankara)
#summary(ankara)
#names(ankara)

#Select and reshape the dataset
library(dplyr)
df <- select(ankara, 9, 12, 15, 21, 29, 31)

library(reshape2)
df_l <- melt(df, id=c("itirazsiz_gecerli_oy", "gecersiz_oy"))
#head(df_l)

df_n <- group_by(df_l, variable) %>% 
        summarize(s = sum(value))

#Make the bar plot that represents the votes from major parties
library(ggplot2)
pl <- ggplot(df_n, aes(x=variable, y=s)) + 
  geom_bar(stat="sum") +
  xlab("party name") +
  ylab("votes") +
  ggtitle("Turkish election vote summary") +
  scale_x_discrete(breaks=c("oy_kullanan_kayitli_secmen", "akp_oy", "chp_oy", "mhp_oy"),
                   labels=c("Total Votes", "Justice and Development Party", "Republican People's Party", "Nationalist Movement Party"))
pl <- pl + theme(axis.text.x = element_text(angle=30, hjust=1, vjust=1)) + theme(legend.position="none")

print(pl)
```

Current Stage
==================
```{r fig.width=6, fig.height=6,echo=FALSE,out.extra='style="float:left"'}
#Read and summarize the data 
ankara <- read.csv("ankara.csv")

#Make the bar plot that represents the votes from major parties
library(ggplot2)

#Add akp and chp number of votes
ankara$akp_plus_chp=(ankara$akp_oy+ankara$chp_oy)

#Calculate the AKP vote share
ankara$akp_vote_share=(ankara$akp_oy/ankara$akp_plus_chp)

library(dplyr)

#Divide valid votes and registered votes gives the turnout rate
ankara <- mutate(ankara, turn_out_rates = gecerli_oy/kayitli_secmen)
ankara <- mutate(ankara, turn_out_rates2 = kullanilan_toplam_oy/kayitli_secmen)

#Make a scatter plot regarding akp-chp and turnout rates
pl2 <- ggplot(ankara, aes(x=turn_out_rates, y=akp_vote_share),
              ggtitle="AKP Vote Share vs turnout")
pl2 <- pl2 + geom_point(size=2, colour="blue") +xlim(0.2, 1.2) +ylim(0, 1) +
                 xlab("Turnout") +
                 ylab("AKP Vote Share") +
  stat_smooth(color="red")
print(pl2)

library(png)
pl_eric <- readPNG("Election Votes Graph.png")

```

```{r fig.width=6, fig.height=6,echo=FALSE, out.extra='style="float:right"'}
#plot(mtcars)
require(grDevices)
#image <- as.raster(matrix(0:1, ncol = 5, nrow = 3))
#op <- par(bg = "white")
#plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
#rasterImage(image, 100, 300, 150, 350, interpolate = FALSE)
plot(1:2, type='n', main="Plotting Over an Image", ann = F, axes = F)
lim <- par()
rasterImage(pl_eric, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
#plot(pl_eric,axes=F,useRaster=T)
```


Future Goals & Possible Directions
========================================================
- Explores algorithms used in the detection of fraud in Turkish Election

- Creates visualization of the obtained dataset

- Quantify the respective rate of fraud

- Applies the algorithms to other elections (Ultimately 2016 US Presidential Election)

References
========================================================
Is Something Rotten In Ankara's Mayoral Election? A Very Preliminary Statistical Analysis. (2014, April 1). Retrieved January 8, 2016, from http://erikmeyersson.com/2014/04/01/is-something-rotten-in-ankaras-mayoral-election-a-very-preliminary-statistical-analysis/

Donoho, D. (2015). 50 Years of Data Science.

James, G. (2013). An introduction to statistical learning with applications in R. Springer.

Chang, W. (2012). R graphics cookbook. Sebastopol, CA: O'Reilly Media.